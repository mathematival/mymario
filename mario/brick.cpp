#include "brick.h"
#include<iostream>
#include"global.h"

Brick::Brick(int a) {
    if(a==1)
    {
       BrickInit1();
    }
    if(a==2)
    {
       BrickInit2();
    }
    if(a==3)
    {
       BrickInit3();
    }
}

void Brick::BrickInit1() {
    m.clear();
    shatter_state = 0;
    int arr[51][2] = {{1000, 360},
                      {1100, 360},
                      {1200, 360},
                      {3200, 360},
                      {3250, 360},
                      {3600, 360},
                      {3700, 360},
                      {3750, 220},
                      {3800, 220},
                      {3850, 220},
                      {3900, 220},
                      {3950, 220},
                      {4000, 220},
                      {4050, 220},
                      {4300, 220},
                      {4350, 220},
                      {4400, 220},
                      {4450, 360},
                      {4750, 360},
                      {4800, 360},
                      {5600, 360},
                      {5750, 220},
                      {5800, 220},
                      {5850, 220},
                      {6050, 220},
                      {6100, 360},
                      {6150, 360},
                      {6200, 360},
                      {6400, 460},
                      {6450, 460},
                      {6500, 460},
                      {6550, 460},
                      {6700, 460},
                      {6750, 460},
                      {6800, 460},
                      {6850, 460},
                      {6450, 420},
                      {6500, 420},
                      {6550, 420},
                      {6700, 420},
                      {6750, 420},
                      {6800, 420},
                      {6500, 380},
                      {6550, 380},
                      {6700, 380},
                      {6750, 380},
                      {6550, 340},
                      {6700, 340},
                      {7250, 360},
                      {7300, 360},
                      {7400, 360},
                      };

    for (int i = 0; i < 51; i++) {
        v.push_back(arr[i][0]);
        v.push_back(arr[i][1]);
        v.push_back(1);
        v2.push_back(v);
        v.clear();
    }
    m.insert(1, v2);
}

void Brick::BrickInit2() {
    m.clear();
    shatter_state = 0;
    int arr[96][2] = {{2500, 460},
                      {2550, 460},
                      {2600, 460},
                      {2650, 460},
                      {2800, 460},
                      {2850, 460},
                      {2900, 460},
                      {2950, 460},
                      {2550, 420},
                      {2600, 420},
                      {2650, 420},
                      {2800, 420},
                      {2850, 420},
                      {2900, 420},
                      {2600, 380},
                      {2650, 380},
                      {2800, 380},
                      {2850, 380},
                      {2650, 340},
                      {2800, 340},
        {3200, 460},
        {3250, 460},
        {3300, 460},
        {3350, 460},
        {3500, 460},
        {3550, 460},
        {3600, 460},
        {3650, 460},
        {3250, 420},
        {3300, 420},
        {3350, 420},
        {3500, 420},
        {3550, 420},
        {3600, 420},
        {3300, 380},
        {3350, 380},
        {3500, 380},
        {3550, 380},
        {3350, 340},
        {3500, 340},
                      {4650,460},
                      {4700,460},
                      {4750,460},
                      {4800,460},
                      {4850,460},
                      {4900,460},
                      {4950,460},
                      {5000,460},
                      {5050,460},
                      {4700,420},
                      {4750,420},
                      {4800,420},
                      {4850,420},
                      {4900,420},
                      {4950,420},
                      {5000,420},
                      {5050,420},
                      {4750,380},
                      {4800,380},
                      {4850,380},
                      {4900,380},
                      {4950,380},
                      {5000,380},
                      {5050,380},
                      {4800,340},
                      {4850,340},
                      {4900,340},
                      {4950,340},
                      {5000,340},
                      {5050,340},
                      {4850,300},
                      {4900,300},
                      {4950,300},
                      {5000,300},
                      {5050,300},
                      {4900,260},
                      {4950,260},
                      {5000,260},
                      {5050,260},
                      {4950,220},
                      {5000,220},
                      {5050,220},
                      {5000,180},
                      {5050,180},
                      {5050,140},

                      {5600, 360},
                      {5750, 220},
                      {5800, 220},
                      {5850, 220},
                      {6050, 220},
                      {6100, 360},
                      {6150, 360},
                      {6200, 360},

                      {7250, 360},
                      {7300, 360},
                      {7400, 360},
                      };

    for (int i = 0; i < 96; i++) {
        v.push_back(arr[i][0]);
        v.push_back(arr[i][1]);
        v.push_back(1);
        v2.push_back(v);
        v.clear();
    }
    m.insert(1, v2);
}

void Brick::BrickInit3() {
    m.clear();
    shatter_state = 0;
    int arr[48][2] = {{1000, 460},
                      {1000, 420},
                      {1000, 380},
                      {1000, 340},
                      {1500, 360},
                      {1700, 220},
                      {1750, 220},
                      {1800, 220},
                      {1850, 220},
                      {1900, 220},
                      {1950, 220},
                      {2000, 220},
                      {2000, 410},
                      {2400, 340},
                      {2400, 380},
                      {2450, 420},
                      {2450, 460},
                      {3000, 360},
                      {3050, 360},
                      {3300, 360},
                      {4900, 360},
                      {4950, 360},
                      {4950, 220},
                      {5000, 220},
                      {5200, 320},
                      {5800, 360},
                      {5900, 360},
                      {5950, 360},
                      {6000, 360},
                      {6050, 360},
                      {6100, 360},
                      {5850, 220},
                      {5900, 220},
                      {5950, 220},
                      {6250, 220},
        {6500, 460},
        {6550, 460},
        {6600, 460},
        {6650, 460},
        {6500, 420},
        {6550, 420},
        {6600, 420},
        {6500, 380},
        {6550, 380},
        {6500, 340},
                      {7250, 360},
                      {7300, 360},
                      {7400, 360},
                      };

    for (int i = 0; i < 48; i++) {
        v.push_back(arr[i][0]);
        v.push_back(arr[i][1]);
        v.push_back(1);
        v2.push_back(v);
        v.clear();
    }
    m.insert(1, v2);
}

void Brick::BrickShatter(QVector < QVector < int >> ::iterator it)
{
    musicPlayer->play(BrickSmash);
    left_shatter_x = *it->begin();
    right_shatter_x = *it->begin() + 20;
    left_shatter_y = right_shatter_y = *(it->begin() + 1);
    shatter_state = 1;
}


void Brick::ShatterState() {
    if (shatter_state == 0) {
        return;
    }
    if (shatter_state > 0 && shatter_state < 10) {
        left_shatter_x -= 20 - shatter_state;
        right_shatter_x += 20 - shatter_state;
        left_shatter_y -= 20 - shatter_state;
        right_shatter_y -= 20 - shatter_state;
        shatter_state++;
    } else if (shatter_state >= 10 && left_shatter_y < 500) {
        left_shatter_y += shatter_state;
        right_shatter_y += shatter_state;
        shatter_state++;
    } else if (left_shatter_y >= 500) {
        left_shatter_x = right_shatter_x = left_shatter_y = right_shatter_y = 0;
        shatter_state = 0;
    }
}

